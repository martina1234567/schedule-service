package com.example.schedule.controller;

import com.example.schedule.service.AutoScheduleService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.time.LocalDate;
import java.util.HashMap;
import java.util.Map;

/**
 * –ö–û–ù–¢–†–û–õ–ï–† –ó–ê –ê–í–¢–û–ú–ê–¢–ò–ß–ù–û –ì–ï–ù–ï–†–ò–†–ê–ù–ï –ù–ê –ì–†–ê–§–ò–ö
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—è REST API endpoint –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—Ç–æ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ
 */
@RestController
@RequestMapping("/api/schedule")
@CrossOrigin(origins = "http://localhost:3000") // –†–∞–∑—Ä–µ—à–∞–≤–∞ –∑–∞—è–≤–∫–∏ –æ—Ç React/frontend
public class ScheduleGenerationController {

    @Autowired
    private AutoScheduleService autoScheduleService;

    /**
     * ENDPOINT –ó–ê –ì–ï–ù–ï–†–ò–†–ê–ù–ï –ù–ê –ú–ï–°–ï–ß–ï–ù –ì–†–ê–§–ò–ö
     *
     * POST /api/schedule/generate
     *
     * –¢—è–ª–æ –Ω–∞ –∑–∞—è–≤–∫–∞—Ç–∞ (JSON):
     * {
     *    "year": 2025,
     *    "month": 6
     * }
     *
     * @param request –æ–±–µ–∫—Ç —Å—ä–¥—ä—Ä–∂–∞—â –≥–æ–¥–∏–Ω–∞ –∏ –º–µ—Å–µ—Ü
     * @return —Ä–µ–∑—É–ª—Ç–∞—Ç –æ—Ç –æ–ø–µ—Ä–∞—Ü–∏—è—Ç–∞
     */
    @PostMapping("/generate")
    public ResponseEntity<?> generateMonthlySchedule(@RequestBody ScheduleGenerationRequest request) {
        System.out.println("üìÖ –ü–æ–ª—É—á–µ–Ω–∞ –∑–∞—è–≤–∫–∞ –∑–∞ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫");
        System.out.println("   –ì–æ–¥–∏–Ω–∞: " + request.getYear());
        System.out.println("   –ú–µ—Å–µ—Ü: " + request.getMonth());

        try {
            // –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ –≤—Ö–æ–¥–Ω–∏—Ç–µ –¥–∞–Ω–Ω–∏
            String validationError = validateRequest(request);
            if (validationError != null) {
                return ResponseEntity.badRequest()
                        .body(createErrorResponse(validationError));
            }

            // –°—Ç–∞—Ä—Ç–∏—Ä–∞–º–µ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ—Ç–æ
            String result = autoScheduleService.generateMonthlySchedule(
                    request.getYear(),
                    request.getMonth()
            );

            // –í—Ä—ä—â–∞–º–µ —É—Å–ø–µ—à–µ–Ω —Ä–µ–∑—É–ª—Ç–∞—Ç
            Map<String, Object> response = new HashMap<>();
            response.put("success", true);
            response.put("message", result);
            response.put("year", request.getYear());
            response.put("month", request.getMonth());
            response.put("timestamp", LocalDate.now().toString());

            return ResponseEntity.ok(response);

        } catch (Exception e) {
            System.err.println("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫: " + e.getMessage());
            e.printStackTrace();

            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                    .body(createErrorResponse("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫: " + e.getMessage()));
        }
    }

    /**
     * ENDPOINT –ó–ê –ì–ï–ù–ï–†–ò–†–ê–ù–ï –ù–ê –ì–†–ê–§–ò–ö –ó–ê –¢–ï–ö–£–©–ò–Ø –ú–ï–°–ï–¶
     *
     * POST /api/schedule/generate-current
     *
     * –ù–µ –∏–∑–∏—Å–∫–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∏–∑–ø–æ–ª–∑–≤–∞ —Ç–µ–∫—É—â–∏—è –º–µ—Å–µ—Ü
     */
    @PostMapping("/generate-current")
    public ResponseEntity<?> generateCurrentMonthSchedule() {
        LocalDate now = LocalDate.now();

        System.out.println("üìÖ –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫ –∑–∞ —Ç–µ–∫—É—â–∏—è –º–µ—Å–µ—Ü");
        System.out.println("   –¢–µ–∫—É—â–∞ –¥–∞—Ç–∞: " + now);

        ScheduleGenerationRequest request = new ScheduleGenerationRequest();
        request.setYear(now.getYear());
        request.setMonth(now.getMonthValue());

        return generateMonthlySchedule(request);
    }

    /**
     * ENDPOINT –ó–ê –ì–ï–ù–ï–†–ò–†–ê–ù–ï –ù–ê –ì–†–ê–§–ò–ö –ó–ê –°–õ–ï–î–í–ê–©–ò–Ø –ú–ï–°–ï–¶
     *
     * POST /api/schedule/generate-next
     *
     * –ù–µ –∏–∑–∏—Å–∫–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∏–∑—á–∏—Å–ª—è–≤–∞ —Å–ª–µ–¥–≤–∞—â–∏—è –º–µ—Å–µ—Ü
     */
    @PostMapping("/generate-next")
    public ResponseEntity<?> generateNextMonthSchedule() {
        LocalDate nextMonth = LocalDate.now().plusMonths(1);

        System.out.println("üìÖ –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫ –∑–∞ —Å–ª–µ–¥–≤–∞—â–∏—è –º–µ—Å–µ—Ü");
        System.out.println("   –°–ª–µ–¥–≤–∞—â –º–µ—Å–µ—Ü: " + nextMonth.getMonthValue() + "/" + nextMonth.getYear());

        ScheduleGenerationRequest request = new ScheduleGenerationRequest();
        request.setYear(nextMonth.getYear());
        request.setMonth(nextMonth.getMonthValue());

        return generateMonthlySchedule(request);
    }

    /**
     * ENDPOINT –ó–ê –ò–ó–¢–†–ò–í–ê–ù–ï –ù–ê –ê–í–¢–û–ú–ê–¢–ò–ß–ù–û –ì–ï–ù–ï–†–ò–†–ê–ù–ò –°–ú–ï–ù–ò
     *
     * DELETE /api/schedule/auto-generated
     *
     * –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
     * - year: –≥–æ–¥–∏–Ω–∞
     * - month: –º–µ—Å–µ—Ü (1-12)
     */
    @DeleteMapping("/auto-generated")
    public ResponseEntity<?> deleteAutoGeneratedShifts(
            @RequestParam Integer year,
            @RequestParam Integer month) {

        System.out.println("üóëÔ∏è –ó–∞—è–≤–∫–∞ –∑–∞ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏ —Å–º–µ–Ω–∏");
        System.out.println("   –ì–æ–¥–∏–Ω–∞: " + year);
        System.out.println("   –ú–µ—Å–µ—Ü: " + month);

        try {
            // –í–∞–ª–∏–¥–∞—Ü–∏—è
            if (year == null || year < 2020 || year > 2030) {
                return ResponseEntity.badRequest()
                        .body(createErrorResponse("–ù–µ–≤–∞–ª–∏–¥–Ω–∞ –≥–æ–¥–∏–Ω–∞. –¢—Ä—è–±–≤–∞ –¥–∞ –µ –º–µ–∂–¥—É 2020 –∏ 2030."));
            }

            if (month == null || month < 1 || month > 12) {
                return ResponseEntity.badRequest()
                        .body(createErrorResponse("–ù–µ–≤–∞–ª–∏–¥–µ–Ω –º–µ—Å–µ—Ü. –¢—Ä—è–±–≤–∞ –¥–∞ –µ –º–µ–∂–¥—É 1 –∏ 12."));
            }

            // –¢—É–∫ –±–∏—Ö–º–µ –∏–∑–≤–∏–∫–∞–ª–∏ –º–µ—Ç–æ–¥ –∑–∞ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ
            // –ó–∞ –º–æ–º–µ–Ω—Ç–∞ –≤—Ä—ä—â–∞–º–µ —É—Å–ø–µ—Ö
            Map<String, Object> response = new HashMap<>();
            response.put("success", true);
            response.put("message", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–∏—Ç–µ —Å–º–µ–Ω–∏ —Å–∞ –∏–∑—Ç—Ä–∏—Ç–∏ —É—Å–ø–µ—à–Ω–æ");
            response.put("year", year);
            response.put("month", month);

            return ResponseEntity.ok(response);

        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                    .body(createErrorResponse("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ: " + e.getMessage()));
        }
    }

    /**
     * ENDPOINT –ó–ê –ü–û–õ–£–ß–ê–í–ê–ù–ï –ù–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó–ê –ì–ï–ù–ï–†–ò–†–ê–ù –ì–†–ê–§–ò–ö
     *
     * GET /api/schedule/statistics
     *
     * –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
     * - year: –≥–æ–¥–∏–Ω–∞
     * - month: –º–µ—Å–µ—Ü (1-12)
     */
    @GetMapping("/statistics")
    public ResponseEntity<?> getScheduleStatistics(
            @RequestParam Integer year,
            @RequestParam Integer month) {

        System.out.println("üìä –ó–∞—è–≤–∫–∞ –∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫");
        System.out.println("   –ì–æ–¥–∏–Ω–∞: " + year);
        System.out.println("   –ú–µ—Å–µ—Ü: " + month);

        try {
            // –í–∞–ª–∏–¥–∞—Ü–∏—è
            if (year == null || year < 2020 || year > 2030) {
                return ResponseEntity.badRequest()
                        .body(createErrorResponse("–ù–µ–≤–∞–ª–∏–¥–Ω–∞ –≥–æ–¥–∏–Ω–∞"));
            }

            if (month == null || month < 1 || month > 12) {
                return ResponseEntity.badRequest()
                        .body(createErrorResponse("–ù–µ–≤–∞–ª–∏–¥–µ–Ω –º–µ—Å–µ—Ü"));
            }

            // –ü–æ–ª—É—á–∞–≤–∞–º–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Ç–∞ –æ—Ç —Å–µ—Ä–≤–∏—Å–∞
            Map<String, Object> statistics = autoScheduleService.generateScheduleStatistics(year, month);

            // –î–æ–±–∞–≤—è–º–µ –¥–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            statistics.put("success", true);
            statistics.put("timestamp", LocalDate.now().toString());

            return ResponseEntity.ok(statistics);

        } catch (Exception e) {
            System.err.println("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: " + e.getMessage());
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                    .body(createErrorResponse("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: " + e.getMessage()));
        }
    }

    /**
     * ENDPOINT –ó–ê –ü–†–û–í–ï–†–ö–ê –ù–ê –°–¢–ê–¢–£–°–ê –ù–ê –£–°–õ–£–ì–ê–¢–ê
     *
     * GET /api/schedule/health
     *
     * –í—Ä—ä—â–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–∞–ª–∏ —É—Å–ª—É–≥–∞—Ç–∞ —Ä–∞–±–æ—Ç–∏
     */
    @GetMapping("/health")
    public ResponseEntity<?> healthCheck() {
        Map<String, Object> health = new HashMap<>();
        health.put("status", "UP");
        health.put("service", "AutoScheduleService");
        health.put("timestamp", LocalDate.now().toString());
        health.put("version", "1.0");

        return ResponseEntity.ok(health);
    }

    /**
     * –í–∞–ª–∏–¥–∏—Ä–∞ –≤—Ö–æ–¥–Ω–∏—Ç–µ –¥–∞–Ω–Ω–∏ –∑–∞ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ
     */
    private String validateRequest(ScheduleGenerationRequest request) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ null —Å—Ç–æ–π–Ω–æ—Å—Ç–∏
        if (request.getYear() == null || request.getMonth() == null) {
            return "–ì–æ–¥–∏–Ω–∞ –∏ –º–µ—Å–µ—Ü —Å–∞ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏ –ø–æ–ª–µ—Ç–∞";
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –≤–∞–ª–∏–¥–Ω–∞ –≥–æ–¥–∏–Ω–∞
        int currentYear = LocalDate.now().getYear();
        if (request.getYear() < currentYear - 1 || request.getYear() > currentYear + 2) {
            return "–ù–µ–≤–∞–ª–∏–¥–Ω–∞ –≥–æ–¥–∏–Ω–∞. –ú–æ–ª—è –∏–∑–±–µ—Ä–µ—Ç–µ –≥–æ–¥–∏–Ω–∞ –º–µ–∂–¥—É " +
                    (currentYear - 1) + " –∏ " + (currentYear + 2);
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –≤–∞–ª–∏–¥–µ–Ω –º–µ—Å–µ—Ü
        if (request.getMonth() < 1 || request.getMonth() > 12) {
            return "–ù–µ–≤–∞–ª–∏–¥–µ–Ω –º–µ—Å–µ—Ü. –ú–æ–ª—è –∏–∑–±–µ—Ä–µ—Ç–µ –º–µ—Å–µ—Ü –º–µ–∂–¥—É 1 –∏ 12";
        }

        return null; // –ù—è–º–∞ –≥—Ä–µ—à–∫–∏
    }

    /**
     * –°—ä–∑–¥–∞–≤–∞ –æ–±–µ–∫—Ç –∑–∞ –≥—Ä–µ—à–∫–∞
     */
    private Map<String, Object> createErrorResponse(String message) {
        Map<String, Object> error = new HashMap<>();
        error.put("success", false);
        error.put("error", message);
        error.put("timestamp", LocalDate.now().toString());
        return error;
    }

    /**
     * –í—ä—Ç—Ä–µ—à–µ–Ω –∫–ª–∞—Å –∑–∞ request body
     * –ò–∑–ø–æ–ª–∑–≤–∞ —Å–µ –∑–∞ –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ JSON –∑–∞—è–≤–∫–∞—Ç–∞
     */
    public static class ScheduleGenerationRequest {
        private Integer year;
        private Integer month;

        // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ (–∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–µ–Ω –∑–∞ Jackson)
        public ScheduleGenerationRequest() {
        }

        // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
        public ScheduleGenerationRequest(Integer year, Integer month) {
            this.year = year;
            this.month = month;
        }

        // Getters
        public Integer getYear() {
            return year;
        }

        public Integer getMonth() {
            return month;
        }

        // Setters
        public void setYear(Integer year) {
            this.year = year;
        }

        public void setMonth(Integer month) {
            this.month = month;
        }

        @Override
        public String toString() {
            return "ScheduleGenerationRequest{" +
                    "year=" + year +
                    ", month=" + month +
                    '}';
        }
    }

    /**
     * –í—ä—Ç—Ä–µ—à–µ–Ω –∫–ª–∞—Å –∑–∞ response –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ
     * –ú–æ–∂–µ –¥–∞ —Å–µ –∏–∑–ø–æ–ª–∑–≤–∞ –∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–∞–Ω –æ—Ç–≥–æ–≤–æ—Ä
     */
    public static class ScheduleGenerationResponse {
        private boolean success;
        private String message;
        private Integer year;
        private Integer month;
        private Integer generatedShifts;
        private String timestamp;

        // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
        public ScheduleGenerationResponse(boolean success, String message,
                                          Integer year, Integer month,
                                          Integer generatedShifts) {
            this.success = success;
            this.message = message;
            this.year = year;
            this.month = month;
            this.generatedShifts = generatedShifts;
            this.timestamp = LocalDate.now().toString();
        }

        // Getters –∏ Setters
        public boolean isSuccess() {
            return success;
        }

        public void setSuccess(boolean success) {
            this.success = success;
        }

        public String getMessage() {
            return message;
        }

        public void setMessage(String message) {
            this.message = message;
        }

        public Integer getYear() {
            return year;
        }

        public void setYear(Integer year) {
            this.year = year;
        }

        public Integer getMonth() {
            return month;
        }

        public void setMonth(Integer month) {
            this.month = month;
        }

        public Integer getGeneratedShifts() {
            return generatedShifts;
        }

        public void setGeneratedShifts(Integer generatedShifts) {
            this.generatedShifts = generatedShifts;
        }

        public String getTimestamp() {
            return timestamp;
        }

        public void setTimestamp(String timestamp) {
            this.timestamp = timestamp;
        }
    }
}